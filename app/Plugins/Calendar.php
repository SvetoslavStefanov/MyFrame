<?php/* * To change this template, choose Tools | Templates * and open the template in the editor. *//** * Description of Calendar * * @author Svetlio */class Calendar {    public $events = array();    public function addEvent(array $attributes = array()){        $this->events[] = array(            'title' => array_cut($attributes, 'name'),            'from' => array_cut($attributes, 'from'),            'to'   => array_cut($attributes, 'to')        );    }    public function draw_calendar($month,$year){        $prev_url = SITE_URL . removeFromUrl(ltrim($_SERVER['REQUEST_URI'], '/'), 'month');        $prev_url = addToUrl($prev_url, 'month', $month-1);        $prev_url = removeFromUrl(ltrim($prev_url, '/'), 'year');        $prev_url = addToUrl($prev_url, 'year', $year);        $next_url = SITE_URL . removeFromUrl(ltrim($_SERVER['REQUEST_URI'], '/'), 'month');        $next_url = addToUrl($next_url, 'month', $month+1);        $next_url = removeFromUrl(ltrim($next_url, '/'), 'year');        $next_url = addToUrl($next_url, 'year', $year);        /* draw table */        $previous_m = $month - 1;        $next_m = $month + 1;        $calendar = "<a href=\"{$prev_url}\" class=\"prev-month\"><img src=\"/images/document-page-previous-icon.png\" /></a>";        $calendar .= "<a href=\"{$next_url}\"  class=\"next-month\"><img src=\"/images/document-page-next-icon.png\" /></a>";        $calendar .= "<div style=\"clear:both\"></div>";        $calendar .= '<table cellpadding="0" cellspacing="1" id="calendar">';        /* table headings */        $headings = array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday');        $calendar.= '<tr class="calendar-row"><td class="calendar-day-head">'.implode('</td><td class="calendar-day-head">',$headings).'</td></tr>';        /* days and weeks vars now ... */        $running_day = date('w',mktime(0,0,0,$month,1,$year)) -1;        $days_in_month = date('t',mktime(0,0,0,$month,1,$year));        $days_in_this_week = 1;        $day_counter = 0;        $dates_array = array();        /* row for week one */        $calendar.= '<tr class="calendar-row">';        /* print "blank" days until the first of the current week */        for($x = 0; $x < $running_day; $x++):            $calendar.= '<td class="calendar-day-np">&nbsp;</td>';            $days_in_this_week++;        endfor;        /* keep going with days.... */        for($list_day = 1; $list_day <= $days_in_month; $list_day++):            $calendar.= '<td class="calendar-day">';            /* add in the day number */            $calendar.= '<div class="day-number">'.$list_day.'</div>';            /** QUERY THE DATABASE FOR AN ENTRY FOR THIS DAY !!  IF MATCHES FOUND, PRINT THEM !! **/            if(!empty($this->events)){                if($events = $this->_searchEventByDate($list_day, $month, $year)){                    foreach($events as $event){                        foreach($event as $key => $val)                            $calendar.= str_repeat("<p>{$val}</p>",1);                    }                }else                    $calendar.= str_repeat("<p>&nbsp;</p>",3);            }else                $calendar.= str_repeat("<p>&nbsp;</p>",3);            $calendar.= '</td>';            if($running_day == 6):            $calendar.= '</tr>';            if(($day_counter+1) != $days_in_month):                $calendar.= '<tr class="calendar-row">';            endif;            $running_day = -1;            $days_in_this_week = 0;            endif;            $days_in_this_week++; $running_day++; $day_counter++;        endfor;        /* finish the rest of the days in the week */        if($days_in_this_week < 8):            for($x = 1; $x <= (8 - $days_in_this_week); $x++):            $calendar.= '<td class="calendar-day-np">&nbsp;</td>';            endfor;        endif;        /* final row */        $calendar.= '</tr>';        /* end the table */        $calendar.= '</table>';        /* all done, return result */        return $calendar;    }    private function _searchEventByDate($day, $month, $year){        $events = array();//collect all events in this day        foreach($this->events as $event){            $ev_date_from = explode(",", $event['from']);            $ev_from_d = $ev_date_from[0];            $ev_from_m = $ev_date_from[1];            $ev_from_y = $ev_date_from[2];            if($event['to'] == '01, 01,1970'){                //$event['to'] = cal_days_in_month(CAL_GREGORIAN, $month, $year) . ", " . $month . ", " . $year;                $event['to'] = $event['from'];            }            $ev_date_to = explode(",", $event['to']);            $ev_to_d = $ev_date_to[0];            $ev_to_m = $ev_date_to[1];            $ev_to_y = $ev_date_to[2];            if($year == $ev_from_y AND $month == $ev_from_m AND $day == $ev_from_d)                $events[$day][] = $event['title'];            if($day == 1 && $ev_from_m == ($month - 1) && $ev_to_m == $month){                $events[$day][] = $event['title'];            }            /*elseif($year == $ev_to_y AND $month == $ev_to_m AND $day == $ev_to_d)                $events[$day][] = $event['title'];            elseif($day > $ev_from_d AND $day < $ev_to_d)                $events[$day][] = $event['title'];*/        }        return $events;    }}?>